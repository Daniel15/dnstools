server {
	server_name www.dnstools.ws;
	listen 80;
	listen [::]:80;
	listen 443 http2;
	listen [::]:443 http2;
	ssl_certificate /etc/letsencrypt/live/dnstools.ws/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/dnstools.ws/privkey.pem;

	return 301 https://dnstools.ws$request_uri;
}

server {
	server_name beta.dnstools.ws;
	listen 80;
	listen [::]:80;
	listen 443 http2;
	listen [::]:443 http2;
	ssl_certificate /etc/letsencrypt/live/dnstools.ws/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/dnstools.ws/privkey.pem;

	# 302 rather than 301 from beta, just in case we have a beta site again one day
	return 302 https://dnstools.ws$request_uri;
}

server {
	server_name dnstools.ws;
	root /var/www/dnstools/ClientApp/build/;
	error_log /var/log/nginx/error.dnstools.ws.log;
	gzip_static on;
	include /var/www/dnstools/nginx/common.conf;

	location / {
		try_files $uri @aspnet;
	}
	
	location /static/ {
		expires max;
	}

	# Redirect old URLs
	rewrite /tools/(.+) /legacy/legacy_redirect.php;

	# Legacy tools that haven't been rewritten yet
	rewrite /legacy/lookup/([^/]+)/([^/]+)/ /legacy/lookup.php?host=$1&type=$2;
	rewrite /legacy/traversal/([^/]+)/([^/]+)/ /legacy/traversal.php?host=$1&type=$2;
}

server {
	server_name api.dnstools.ws;
	error_log /var/log/nginx/error.api.dnstools.ws.log;
	include /var/www/dnstools/nginx/common.conf;

	location = / {
		return 301 https://dnstools.ws/;
	}

	# Plausible logging
	location = /api/event {
		proxy_pass http://hits.vpn.d.sb:8000/api/event;
		proxy_buffering on;
		proxy_http_version 1.1;

		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Host $host;
	}

	location / {
		include /var/www/dnstools/nginx/aspnet.conf;
	}
}
